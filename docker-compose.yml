# services:
#   frontend:
#     build:
#       context: ./client
#       dockerfile: Dockerfile
#     ports:
#       - "80:5173"
#     depends_on:
#       - backend

#   backend:
#     build:
#       context: ./server
#     ports:
#       - "5002:3001"
#     environment:
#       DB_HOST: db
#       DB_PORT: ${DB_PORT}
#       DB_USER: ${POSTGRES_USER}
#       DB_PASSWORD: ${POSTGRES_PASSWORD}
#       DB_NAME: ${POSTGRES_DB}
#     depends_on:
#       - db

#   db:
#     image: postgres:latest
#     environment:
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       POSTGRES_DB: ${POSTGRES_DB}
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     ports:
#       - "5432:5432"

# volumes:
#   db-data:

version: "3.8"

services:
    traefik:
        image: traefik:v3.2.3
        command:
            - "--api.insecure=false"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web.address=:80"
            - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
            - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
            - "--entrypoints.websecure.address=:443"
            - "--entrypoints.websecure.http.tls.certresolver=myresolver"
            - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
            - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
            - "--certificatesresolvers.myresolver.acme.email=mab1999@mail.ru"
            - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
            - "letsencrypt:/letsencrypt"
        networks:
            - web
        restart: unless-stopped

    api:
        build:
            context: ./server
            dockerfile: Dockerfile
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.api.rule=Host(kid-vibe.ru) && PathPrefix(/api)"
            - "traefik.http.middlewares.api-strip-prefix.stripprefix.prefixes=/api"
            - "traefik.http.routers.api.middlewares=api-strip-prefix"
            - "traefik.http.services.api.loadbalancer.server.port=5002"
        networks:
            - web
        restart: unless-stopped

    ui:
        build:
            context: ./client
            dockerfile: Dockerfile
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.ui.rule=Host(kid-vibe.ru) && PathPrefix(/)"
            - "traefik.http.services.ui.loadbalancer.server.port=80"
        networks:
            - web
        restart: unless-stopped

networks:
    web:
        driver: bridge

volumes:
    letsencrypt:
